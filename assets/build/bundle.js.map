{"version":3,"sources":["webpack:///./src/client/modules/Comics/features/comic-details/module/redux-saga.ts","webpack:///./src/client/modules/Comics/features/search-box/index.tsx","webpack:///./src/client/modules/Comics/features/views-box/index.tsx","webpack:///./src/client/App.tsx","webpack:///./src/client/modules/Share/utils/index.ts","webpack:///./src/client/modules/NotFound/index.tsx","webpack:///./src/client/config/index.ts","webpack:///./src/client/modules/Comics/module/api.ts","webpack:///./src/client/modules/Comics/module/comics.reducer.ts","webpack:///./src/client/redux/store.ts","webpack:///./src/client/modules/Comics/features/header/index.tsx","webpack:///./src/client/modules/Comics/withComics.tsx","webpack:///./src/client/modules/App/index.tsx","webpack:///./src/client/modules/Comics/features/comic-details/module/constants.ts","webpack:///./src/client/modules/Comics/module/constants.ts","webpack:///./src/client/modules/Comics/features/comic-details/index.tsx","webpack:///./src/client/modules/Comics/module/redux-saga.ts","webpack:///./src/client/modules/Comics/index.tsx","webpack:///./src/client/modules/Comics/features/comic-details/module/comic.reducer.ts","webpack:///./src/client/modules sync redux-saga.ts","webpack:///./src/client/modules/Comics/features/comic-details/module/reselect.ts","webpack:///./src/client/redux/sagas.ts","webpack:///./src/client/modules/Comics/module/reselect.ts","webpack:///./src/client/modules/Comics/features/comic-details/module/redux-connect.ts","webpack:///./src/client/modules/Comics/features/comic-details/withComicDetails.tsx","webpack:///./src/client/api/index.ts","webpack:///./src/client/modules/Comics/module/actions.ts","webpack:///./src/client/modules/Comics/features/sort-box/index.tsx","webpack:///./src/client/modules/Comics/features/comic-item/index.tsx","webpack:///./src/client/modules/Comics/features/comic-details/module/actions.ts","webpack:///./src/client/redux/reducers.ts","webpack:///./src/client/modules/Comics/module/redux-connect.ts","webpack:///./src/client/modules sync \\.reducer.ts","webpack:///./src/client/modules/Share/modules/error-boudary/index.tsx","webpack:///./src/client/modules/Comics/features/footer/index.tsx"],"names":["effects_1","__webpack_require__","constants_1","actions_1","api_1","actionRequetsFetchComicMarvel","action","put","actionFetchingComicMarvel","id","payload","data","call","default","apiGetComicMarvel","code","actionFetchedComicMarvel","results","actionFetchFailComicMarvel","error","exports","takeEvery","ACTION_REQUEST_FETCH_COMIC","React","react_redux_1","redux_connect_1","connect","mapStateToProps","mapDispatchToProps","Component","[object Object]","keySearch","this","props","comics","onSearchComics","actionSearchComics","createElement","Fragment","htmlFor","className","type","name","value","onChange","e","target","placeholder","viewsMethods","onViewsComics","actionViewsComics","ReactDOM","index_1","react_router_dom_1","store_1","hydrate","Provider","store","BrowserRouter","document","getElementById","convertToLocalDate","date","d","Date","isNaN","getTime","getDate","slice","getMonth","getFullYear","marvelApiConfigs","ts","apikey","hash","domain","_api_services_1","axios_1","ComicsType","super","apiGetComicsMarvel","paramsConfig","get","api","params","Object","assign","config","comicId","getApiServices","getConfig","initailStateComics","status","limit","LIMIT_PER_PAGE","page","totalRecords","totalPages","resultsWithKeySearch","sortBy","cached","state","ACTION_FETCHING_COMICS","ACTION_FETCHED_COMICS","pageLoaded","pageCached","find","pageComics","newCached","ACTION_FETCH_FAIL_COMICS","ACTION_SORT_COMICS","newResultsAfterSort","sort","a","b","ACTION_SEARCH_COMICS","toLowerCase","newResultsAfterSearch","filter","title","includes","ACTION_CHANGE_VIEWS_COMICS","redux_1","redux_thunk_1","redux_saga_1","redux_devtools_extension_1","reducers_1","sagas_1","preloadedState","process","env","BROWSER_SIDE","window","__PRELOADED_STATE__","saga","createStore","composeWithDevTools","applyMiddleware","run","search_box_1","sort_box_1","views_box_1","href","recompose_1","react_router_1","error_boudary_1","react_spinners_1","footer_1","header_1","compose","withRouter","WrappedComponent","onPageChange","cachePageComicsMarvel","fetchComicsMarvel","content","onSortComics","actionSortComics","BeatLoader","sizeUnit","size","color","loading","comic_details_1","index_2","Switch","Route","exact","path","component","ACTION_FETCHING_COMIC","ACTION_FETCHED_COMIC","ACTION_FETCH_FAIL_COMIC","ACTION_REQUEST_FETCH_COMICS","withComicDetails_1","description","thumbnail","creators","dates","comic","thumbnailUrl","extension","published","src","alt","items","map","creator","index","key","role","actionRequetsFetchComicsMarvel","actionFetchingComicsMarvel","offset","total","Math","ceil","actionFetchedComicsMarvel","actionFetchFailComicsMarvel","withComics_1","comic_item_1","react_js_pagination_1","RenderComicsItem","comicsList","comicItem","RenderComicsItemWithListViews","Link","to","blockContentItems","trim","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","innerClass","itemClass","linkClass","cache","isComicCached","some","comicCached","newCache","push","./Comics/features/comic-details/module/redux-saga.ts","./Comics/module/redux-saga.ts","webpackContext","req","webpackContextResolve","o","Error","keys","resolve","module","reselect_1","comicSelector","createSelector","comicState","requireModule","sagas","forEach","fileName","globalSaga","fork","all","comicsSelector","comicsState","fetchComicMarvel","actionRequestFetchComicMarvel","cacheComicMarvel","match","comicCacched","_config_1","actionRequestFetchComicsMarvel","actionSortComicsByField","actionSearchComicsByKey","imageSrc","lodash_1","reducers","reducerName","camelCase","combineReducers","./Comics/features/comic-details/module/comic.reducer.ts","./Comics/module/comics.reducer.ts","hasError","info","console","log","children"],"mappings":"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","file":"bundle.js","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTION_REQUEST_FETCH_COMIC } from \"./constants\";\r\nimport { actionFetchingComicMarvel, actionFetchedComicMarvel, actionFetchFailComicMarvel } from \"./actions\";\r\nimport ComicsApi from \"@comics/module/api\";\r\n\r\nfunction* actionRequetsFetchComicMarvel(action) {\r\n    try {\r\n        yield put(actionFetchingComicMarvel());\r\n        const id = action.payload;\r\n        const { data } = yield call(ComicsApi.apiGetComicMarvel, id);\r\n        if (data.code === 200) {\r\n            yield put(actionFetchedComicMarvel(data.data.results[0]));\r\n        }\r\n        else {\r\n            yield put(actionFetchFailComicMarvel());\r\n        }\r\n\r\n    } catch (error) {\r\n        yield put(actionFetchFailComicMarvel());\r\n    }\r\n}\r\n\r\nfunction* watchRequetsFetchComicMarvel() {\r\n    yield takeEvery(ACTION_REQUEST_FETCH_COMIC, actionRequetsFetchComicMarvel)\r\n}\r\n\r\n\r\nexport default [\r\n    watchRequetsFetchComicMarvel\r\n]","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps, mapDispatchToProps } from '@comics/module/redux-connect';\r\n\r\ninterface IProps {\r\n    comics: any;\r\n    onSearchComics: (keySearch: string) => void;\r\n}\r\n\r\nclass SearhBoxComics extends React.Component<any, any> {\r\n    render() {\r\n        const { keySearch } = this.props.comics;\r\n        const onSearchComics = this.props.actionSearchComics;\r\n        return (\r\n            <React.Fragment>\r\n                <label htmlFor=\"search-box\">Search: </label>\r\n                <input className=\"search-box\" type=\"text\" name=\"search-box\" value={keySearch} onChange={(e) => onSearchComics(e.target.value)} placeholder=\"Type to find something...\" />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearhBoxComics);\r\n\r\n\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps, mapDispatchToProps } from '@comics/module/redux-connect';\r\n\r\ninterface IProps {\r\n    // comics: any;\r\n    // onViewsComics: (sortBy: string) => void;\r\n}\r\n\r\nclass SortBoxComics extends React.Component<any, any> {\r\n    render() {\r\n        const { viewsMethods } = this.props.comics;\r\n        const onViewsComics = this.props.actionViewsComics;\r\n        return (\r\n            <select className=\"views-box\" value={viewsMethods} onChange={(e) => onViewsComics(e.target.value)}>\r\n                <option value=\"\">Grid Views</option>\r\n                <option value=\"list\">List Views</option>\r\n            </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBoxComics);\r\n\r\n\r\n","import * as React from 'react'\r\nimport * as ReactDOM from \"react-dom\";\r\nimport App from \"@app/index\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '@redux/store';\r\n\r\nReactDOM.hydrate(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root')\r\n)","export const convertToLocalDate = (date: any) => {\r\n    const d = new Date(date);\r\n    if(isNaN(d.getTime())){\r\n        return \"--/--/---\"\r\n    }   \r\n    const dd = `0${d.getDate()}`.slice(-2);\r\n    const MM = `0${d.getMonth() + 1}`.slice(-2);\r\n    const YYYY = `${d.getFullYear()}`;\r\n    return `${dd}/${MM}/${YYYY}`\r\n}","import * as React from 'react';\r\n\r\nexport default class extends React.Component<any, any>{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    #404 Not Found Page\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}","export const marvelApiConfigs = {\r\n    ts: 1,\r\n    apikey: '22c3fa0ee15cee85210e42f6bac742f1',\r\n    hash: '4f021a1c41639f51b0a0051806f40e9a',\r\n    domain: 'https://gateway.marvel.com/v1/public'\r\n}","import ApiServices from \"@api-services\";\r\nimport Axios from \"axios\";\r\n\r\nconst ComicsType = \"comics\";\r\n\r\nclass ComicsApiServices extends ApiServices {\r\n    private api: string;\r\n    private config: any;\r\n    constructor() {\r\n        super(ComicsType);\r\n        this.api = this.getApiServices();\r\n        this.config = this.getConfig();\r\n    }\r\n    apiGetComicsMarvel = (paramsConfig: any) => Axios.get(this.api, {\r\n        params:{\r\n            ...paramsConfig,\r\n            ...this.config\r\n        }\r\n    })\r\n\r\n    apiGetComicMarvel = (comicId: any) => Axios.get(`${this.api}/${comicId}`, {\r\n        params:{\r\n            ...this.config\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport default new ComicsApiServices();","import { ACTION_FETCHING_COMICS, ACTION_FETCHED_COMICS, ACTION_FETCH_FAIL_COMICS, LIMIT_PER_PAGE, ACTION_SORT_COMICS, ACTION_SEARCH_COMICS, ACTION_CHANGE_VIEWS_COMICS } from \"./constants\";\r\n\r\nconst initailStateComics = {\r\n    status: \"\",\r\n    data: {\r\n        results: [],\r\n        limit: LIMIT_PER_PAGE,\r\n        page: 1,\r\n        totalRecords: 0,\r\n        totalPages: 0,\r\n    },\r\n    resultsWithKeySearch: [],\r\n    sortBy: \"\",\r\n    keySearch: \"\",\r\n    viewsMethods: \"\",\r\n    cached: []\r\n}\r\nexport default (state = initailStateComics, action) => {\r\n    switch (action.type) {\r\n        case ACTION_FETCHING_COMICS: {\r\n            return {\r\n                ...state,\r\n                status: \"fetching\"\r\n            }\r\n        }\r\n        case ACTION_FETCHED_COMICS: {\r\n            const pageLoaded = {\r\n                page: action.payload.page,\r\n                results: action.payload.results\r\n            }\r\n            const pageCached = state.cached.find(pageComics => pageComics.page == pageLoaded.page);\r\n            let newCached = [...state.cached];\r\n            !pageCached ? newCached = [...state.cached, pageLoaded] : false\r\n            return {\r\n                ...state,\r\n                status: \"fetched\",\r\n                data: {\r\n                    ...action.payload\r\n                },\r\n                cached: newCached\r\n            }\r\n        }\r\n        case ACTION_FETCH_FAIL_COMICS: {\r\n            return {\r\n                ...state,\r\n                status: \"error\"\r\n            }\r\n        }\r\n        case ACTION_SORT_COMICS: {\r\n            const sortBy: string = action.payload;\r\n            const newResultsAfterSort = [...state.data.results].sort((a, b) => {\r\n                if (a[sortBy] < b[sortBy]) { return -1; }\r\n                if (a[sortBy] > b[sortBy]) { return 1; }\r\n                return 0;\r\n            })\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    results: newResultsAfterSort,\r\n                },\r\n                sortBy\r\n            }\r\n        }\r\n        case ACTION_SEARCH_COMICS: {\r\n            const keySearch = action.payload.toLowerCase();\r\n            const newResultsAfterSearch = [...state.data.results].filter(comics => comics.title.toLowerCase().includes(keySearch));\r\n            return {\r\n                ...state,\r\n                resultsWithKeySearch: newResultsAfterSearch,\r\n                keySearch\r\n            }\r\n        }\r\n        case ACTION_CHANGE_VIEWS_COMICS: {\r\n            const viewsMethods = action.payload;\r\n            return {\r\n                ...state,\r\n                viewsMethods\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducers from \"./reducers\";\r\nimport rootSagas from './sagas';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __PRELOADED_STATE__: any;\r\n    }\r\n}\r\n\r\nlet preloadedState={};\r\n\r\nif(process.env.BROWSER_SIDE){\r\n    preloadedState = {...window.__PRELOADED_STATE__} ;\r\n    delete window.__PRELOADED_STATE__;\r\n}\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    preloadedState,\r\n    composeWithDevTools(\r\n        applyMiddleware(\r\n            thunk,\r\n            saga\r\n        )    \r\n    )\r\n)\r\n\r\nsaga.run(rootSagas);\r\nexport default store;","import * as React from 'react';\r\nimport \"./module/index.scss\";\r\nimport SearchBox from '@comics/features/search-box';\r\nimport SortBox from '@comics/features/sort-box';\r\nimport ViewsBox from '@comics/features/views-box';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nclass ComicsPageHeader extends React.Component<IProps, any>{\r\n    render() {\r\n        return (\r\n            <div className=\"home-header\">\r\n                <div className=\"home-header-upper\">\r\n                    <ul className=\"category\">\r\n                        <li><a href=\"#\">VIDEOS</a></li>\r\n                        <li><a href=\"#\">CHARACTER</a></li>\r\n                        <li><a href=\"#\">COMICS</a></li>\r\n                        <li><a href=\"#\">MOVIES</a></li>\r\n                        <li><a href=\"#\">TV SHOWS</a></li>\r\n                        <li><a href=\"#\">GAME</a></li>\r\n                        <li><a href=\"#\">MORE</a></li>\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"home-header-lower\">\r\n                    <ul className=\"menu\">\r\n                        <li><a href=\"#\"></a></li>\r\n                        <li>\r\n                            <SearchBox />\r\n                        </li>\r\n                        <li>\r\n                            <ViewsBox />\r\n                        </li>\r\n                        <li>\r\n                            <SortBox />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComicsPageHeader;","import * as React from 'react';\r\nimport { compose } from \"recompose\";\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps, mapDispatchToProps } from './module/redux-connect';\r\nimport ErrorBoundary from '@share/modules/error-boudary';\r\nimport { BeatLoader } from 'react-spinners';\r\nimport './module/index.scss';\r\nimport ComicsPageFooter from './features/footer';\r\nimport ComicsPageHeader from './features/header';\r\n\r\ninterface IProps {\r\n    comics: any;\r\n    fetchComicsMarvel: (params: any) => ({ type: string, payload: any })\r\n    actionSortComics: (sortBy: string) => ({ type: string, payload: string });\r\n    actionSearchComics: (keySearch: string) => ({ type: string, payload: string });\r\n    cachePageComicsMarvel: (pageCached: any) => ({type: string, payload: any});\r\n}\r\n\r\n\r\nconst enhance = WrappedComponent =>\r\n    class extends React.Component<IProps, any>{\r\n        componentDidMount() {\r\n            const {cached, data} = this.props.comics;\r\n            const { limit, page } = data;\r\n            const pageCached = cached.find(pageComics => pageComics.page == page);\r\n            if(!pageCached){\r\n                const params = {\r\n                    limit,\r\n                    page\r\n                }\r\n                this.props.fetchComicsMarvel(params); \r\n            }\r\n        }\r\n\r\n        onPageChange = (page) => {\r\n            const {cached, data} = this.props.comics;\r\n            const { limit, totalPages, totalRecords } = data;\r\n            const pageCached = cached.find(pageComics => pageComics.page == page);\r\n            if(!!pageCached){\r\n                const payload = {\r\n                    results: pageCached.results,\r\n                    page,\r\n                    limit,\r\n                    totalPages,\r\n                    totalRecords\r\n                }\r\n                this.props.cachePageComicsMarvel(payload);   \r\n            }\r\n            else if (page >= 1 && page <= totalPages) {\r\n                const params = {\r\n                    limit,\r\n                    page\r\n                }\r\n                this.props.fetchComicsMarvel(params);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const { status } = this.props.comics;\r\n            let content;\r\n            if (status === \"fetched\") {\r\n                content = (\r\n                    <ErrorBoundary>\r\n                        <WrappedComponent\r\n                            onPageChange={this.onPageChange}\r\n                            onSortComics={this.props.actionSortComics}\r\n                            onSearchComics={this.props.actionSearchComics}\r\n                            {...this.props}\r\n                        />\r\n                    </ErrorBoundary>\r\n                )\r\n            }\r\n            else if (status === \"fetching\") {\r\n                content = (\r\n                    <div className=\"spinner\">\r\n                        <BeatLoader\r\n                            sizeUnit={\"px\"}\r\n                            size={15}\r\n                            color={'rgb(54, 215, 183)'}\r\n                            loading={true}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n            return (\r\n                <div className=\"wrap\">\r\n                    <ComicsPageHeader />\r\n                    <div className=\"page-comics\">\r\n                        {content}\r\n                    </div>\r\n                    <ComicsPageFooter />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\nexport default compose<any, any>(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    enhance\r\n)   ","import * as React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { Switch } from \"react-router\";\r\nimport Comics from '@comics/index';\r\nimport ComicDetails from '@comics/features/comic-details';\r\nimport NotFound from '@not-found/index';\r\nimport \"@share/scss/reset-css.scss\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class App extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Comics} />\r\n                <Route path=\"/comic/:id\" component={ComicDetails} />\r\n                <Route path=\"/*\" component={NotFound} />\r\n            </Switch>\r\n        )\r\n    }\r\n}","export const ACTION_REQUEST_FETCH_COMIC = \"[comic] Request fetch comic marvel\";\r\nexport const ACTION_FETCHING_COMIC = \"[comic] Fetching comic\";\r\nexport const ACTION_FETCHED_COMIC = \"[comic] Fetched comic\";\r\nexport const ACTION_FETCH_FAIL_COMIC = \"[comic] Fetch fail comic\";","export const ACTION_REQUEST_FETCH_COMICS = \"[comics] Request fetch comics marvel\";\r\nexport const ACTION_FETCHING_COMICS = \"[comics] Fetching comics\";\r\nexport const ACTION_FETCHED_COMICS = \"[comics] Fetched comics\";\r\nexport const ACTION_FETCH_FAIL_COMICS = \"[comics] Fetch fail comics\";\r\nexport const ACTION_SORT_COMICS = \"[comics] Sort comics by field\";\r\nexport const ACTION_SEARCH_COMICS = \"[comics] Search comics by key\";\r\nexport const ACTION_CHANGE_VIEWS_COMICS = \"[comics] Change method views comics\";\r\nexport const LIMIT_PER_PAGE = 12;","import * as React from 'react';\r\nimport withComicDetails from './withComicDetails';\r\nimport {convertToLocalDate} from '@share/utils/index'\r\n\r\nclass ComicDetails extends React.Component<any, any> {\r\n\r\n    render() {\r\n        const {\r\n            title,\r\n            description,\r\n            thumbnail,\r\n            creators,\r\n            dates\r\n        } = this.props.comic.data;\r\n        const thumbnailUrl = `${thumbnail.path}.${thumbnail.extension}`;\r\n        const published = dates.find(date => date.type ===\"onsaleDate\");\r\n        return (\r\n            <div className=\"page-comic-block\">\r\n                <div className=\"page-comic-block-details\">\r\n                    <div className=\"page-comic-block-details-thumbnail\">\r\n                        <img src={thumbnailUrl} alt={title} />\r\n                    </div>\r\n                    <div className=\"page-comic-block-details-description\">\r\n                        <h1>{title}</h1>\r\n                        <ul className=\"creator\">\r\n                            <li>\r\n                                <h5>Published:</h5>\r\n                                <p>{convertToLocalDate(published.date)}</p>\r\n                            </li>\r\n                            {creators.items.map((creator, index) =>\r\n                                <li key={index}>\r\n                                    <h5>{creator.role}:</h5>\r\n                                    <p>{creator.name}</p>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                        <p className=\"description\">{description}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"page-comic-block-purchase\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withComicDetails(ComicDetails);","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { ACTION_REQUEST_FETCH_COMICS } from \"./constants\";\r\nimport { actionFetchingComicsMarvel, actionFetchedComicsMarvel, actionFetchFailComicsMarvel } from \"./actions\";\r\nimport ComicsApi from \"./api\";\r\n\r\nfunction* actionRequetsFetchComicsMarvel(action) {\r\n    try {\r\n        yield put(actionFetchingComicsMarvel());\r\n        const { limit, page} = action.payload;\r\n        const params = {\r\n            limit,\r\n            offset: (page - 1) * limit\r\n        }\r\n        const { data } = yield call(ComicsApi.apiGetComicsMarvel, params);\r\n        if (data.code === 200) {\r\n            const {\r\n                total,\r\n                results,\r\n            } = data.data;\r\n            const payload = {\r\n                results,\r\n                page,\r\n                limit,\r\n                totalRecords: total,\r\n                totalPages: Math.ceil(total / params.limit)\r\n            }\r\n            yield put(actionFetchedComicsMarvel(payload));\r\n        }\r\n        else {\r\n            yield put(actionFetchFailComicsMarvel());\r\n        }\r\n\r\n    } catch (error) {\r\n        yield put(actionFetchFailComicsMarvel());\r\n    }\r\n}\r\n\r\nfunction* watchRequetsFetchComicsMarvel() {\r\n    yield takeEvery(ACTION_REQUEST_FETCH_COMICS, actionRequetsFetchComicsMarvel)\r\n}\r\n\r\n\r\nexport default [\r\n    watchRequetsFetchComicsMarvel\r\n]","import * as React from 'react';\r\nimport withComics from './withComics';\r\nimport ComicItem from './features/comic-item';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    comics: any;\r\n    onPageChange: (page: number) => void;\r\n    fetchComicsMarvel: (payload: any) => ({ type: string, payload: any });\r\n}\r\n\r\nconst RenderComicsItem = (props: any) => props.comicsList.map(comicItem =>\r\n    <ComicItem\r\n        key={comicItem.id}\r\n        comic={comicItem}\r\n    />\r\n)\r\n\r\nconst RenderComicsItemWithListViews = (props: any) => (\r\n    <table className=\"table table-hover\">\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <h5>#</h5>\r\n                </td>\r\n                <td>\r\n                    <h5>Title</h5>\r\n                </td>\r\n                <td>\r\n                    <h5>Link</h5>\r\n                </td>\r\n                <td>\r\n                    <h5>Image</h5>\r\n                </td>\r\n            </tr>\r\n            {props.comicsList.map((comicItem) =>\r\n                <tr key={comicItem.id}>\r\n                    <td>{comicItem.id}</td>\r\n                    <td>{comicItem.title}</td>\r\n                    <td>\r\n                        <Link to={`/comic/${comicItem.id}`}>\r\n                            /comic/{comicItem.id}\r\n                        </Link>\r\n                    </td>\r\n                    <td>\r\n                        <img src={`${comicItem.thumbnail.path}.${comicItem.thumbnail.extension}`} alt=\"\" />\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </tbody>\r\n    </table>\r\n)\r\n\r\n\r\nclass Comics extends React.Component<IProps, any>{\r\n    render() {\r\n        const {\r\n            results,\r\n            page,\r\n            limit,\r\n            totalRecords,\r\n        } = this.props.comics.data;\r\n        const {\r\n            keySearch,\r\n            viewsMethods,\r\n            resultsWithKeySearch\r\n        } = this.props.comics;\r\n        let blockContentItems;\r\n        if (viewsMethods === \"list\") {\r\n            blockContentItems = (\r\n                <div className=\"page-comics-block-items-list\">\r\n                    {keySearch.trim() !== \"\" ?\r\n                        <RenderComicsItemWithListViews comicsList={resultsWithKeySearch} /> :\r\n                        <RenderComicsItemWithListViews comicsList={results} />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            blockContentItems = (\r\n                <div className=\"page-comics-block-items\">\r\n                    {keySearch.trim() !== \"\" ?\r\n                        <RenderComicsItem comicsList={resultsWithKeySearch} /> :\r\n                        <RenderComicsItem comicsList={results} />\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"page-comics-block\">\r\n                {blockContentItems}\r\n                <div className=\"page-comics-block-pagination\">\r\n                    <Pagination\r\n                        activePage={page}\r\n                        itemsCountPerPage={limit}\r\n                        totalItemsCount={totalRecords}\r\n                        pageRangeDisplayed={5}\r\n                        onChange={(page) => this.props.onPageChange(page)}\r\n                        innerClass=\"pagination\"\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withComics(Comics);","import { ACTION_FETCHING_COMIC, ACTION_FETCHED_COMIC, ACTION_FETCH_FAIL_COMIC } from \"./constants\";\r\n\r\nconst initailStateComics = {\r\n    status: \"\",\r\n    data: {\r\n    },\r\n    cache: []\r\n}\r\nexport default (state = initailStateComics, action) => {\r\n    switch (action.type) {\r\n        case ACTION_FETCHING_COMIC: {\r\n            return {\r\n                ...state,\r\n                status: \"fetching\"\r\n            }\r\n        }\r\n        case ACTION_FETCHED_COMIC: {\r\n            const comic = {...action.payload};\r\n            const isComicCached = state.cache.some(comicCached => comicCached.id == comic.id);\r\n            let newCache = [...state.cache];\r\n            !isComicCached ? newCache.push(comic) : false;\r\n            return {\r\n                ...state,\r\n                status: \"fetched\",\r\n                data: comic,\r\n                cache: newCache\r\n            }\r\n        }\r\n        case ACTION_FETCH_FAIL_COMIC: {\r\n            return {\r\n                ...state,\r\n                status: \"error\"\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","var map = {\n\t\"./Comics/features/comic-details/module/redux-saga.ts\": \"/wZp\",\n\t\"./Comics/module/redux-saga.ts\": \"Igxp\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Oc24\";","import { createSelector } from 'reselect';\r\n\r\nexport const comicSelector = createSelector(\r\n    (state: any) => state.comic,\r\n    comicState => comicState\r\n)","import { all, fork } from 'redux-saga/effects';\r\n\r\n\r\nconst requireModule = require.context(\"../modules\", true, /redux-saga.ts/); //extract redux-saga.ts files inside redux folder\r\nlet sagas : any = [];\r\nrequireModule.keys().forEach((fileName : string) => {\r\n\r\n    if(requireModule(fileName).default){\r\n        sagas=[...sagas,...requireModule(fileName).default];\r\n    }\r\n});\r\nconst globalSaga = sagas.map( (saga: any)=>fork(saga))\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...globalSaga\r\n    ])\r\n}","import { createSelector } from 'reselect';\r\n\r\nexport const comicsSelector = createSelector(\r\n    (state: any) => state.comics,\r\n    comicsState => comicsState\r\n)","import { comicSelector } from \"./reselect\";\r\nimport { actionRequestFetchComicMarvel, actionFetchedComicMarvel} from \"./actions\";\r\n\r\nexport const mapStateToProps = state => ({\r\n    comic:  comicSelector(state)\r\n})\r\n\r\n\r\nexport const mapDispatchToProps = {\r\n    fetchComicMarvel: actionRequestFetchComicMarvel,\r\n    cacheComicMarvel: actionFetchedComicMarvel\r\n}\r\n","import * as React from 'react';\r\nimport ComicsPageHeader from '../header';\r\nimport ComicsPageFooter from '../footer';\r\nimport { compose } from 'recompose';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps, mapDispatchToProps } from './module/redux-connect';\r\nimport \"./module/index.scss\";\r\nimport { BeatLoader } from 'react-spinners';\r\nimport ErrorBoundary from '@share/modules/error-boudary';\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<MatchParams> {\r\n    comic: any;\r\n    fetchComicMarvel: (idComic: string) => ({ type: string, payload: any });\r\n    cacheComicMarvel: (comic: any) => ({type: string, payload: any});\r\n}\r\n\r\nconst enhance = WrappedComponent =>\r\n    class extends React.Component<IProps, any>{\r\n        componentDidMount() {\r\n            const { cache } = this.props.comic;\r\n            const comicId = this.props.match.params.id;\r\n            const comicCacched = cache.find(comic => comic.id == comicId);\r\n            if(!!comicCacched){ \r\n                this.props.cacheComicMarvel(comicCacched);\r\n            }   \r\n            else{\r\n                this.props.fetchComicMarvel(comicId);\r\n            }\r\n        }\r\n        render() {\r\n            const { status } = this.props.comic;\r\n            let content;\r\n            if (status === \"fetched\") {\r\n                content = (\r\n                    <ErrorBoundary>\r\n                        <WrappedComponent {...this.props} />\r\n                    </ErrorBoundary>\r\n                )\r\n            }\r\n            else if (status === \"fetching\") {\r\n                content = (\r\n                    <div className=\"spinner\">\r\n                        <BeatLoader\r\n                            sizeUnit={\"px\"}\r\n                            size={15}\r\n                            color={'rgb(54, 215, 183)'}\r\n                            loading={true}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n            return (\r\n                <div className=\"wrap\">\r\n                    <ComicsPageHeader />\r\n                    <div className=\"page-comic\">\r\n                        {content}\r\n                    </div>\r\n                    <ComicsPageFooter />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default compose<any, any>(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    enhance\r\n)","import {\r\n    marvelApiConfigs\r\n} from \"@config\";\r\n\r\nclass ApiServices {\r\n    private type: string;\r\n    constructor(type: string) {\r\n        this.type = type;\r\n    }\r\n    getApiServices = () => `${marvelApiConfigs.domain}/${this.type}`;\r\n\r\n    getConfig = () => ({\r\n        ts: marvelApiConfigs.ts,\r\n        apikey: marvelApiConfigs.apikey,\r\n        hash: marvelApiConfigs.hash\r\n    })\r\n}\r\n\r\nexport default ApiServices;","import { ACTION_REQUEST_FETCH_COMICS, ACTION_FETCHING_COMICS, ACTION_FETCHED_COMICS, ACTION_FETCH_FAIL_COMICS, ACTION_SORT_COMICS, ACTION_SEARCH_COMICS, ACTION_CHANGE_VIEWS_COMICS } from \"./constants\";\r\n\r\nexport const actionRequestFetchComicsMarvel = (payload) => ({type: ACTION_REQUEST_FETCH_COMICS, payload});\r\nexport const actionFetchingComicsMarvel = () => ({type: ACTION_FETCHING_COMICS});\r\nexport const actionFetchedComicsMarvel = (payload) => ({type: ACTION_FETCHED_COMICS, payload});\r\nexport const actionFetchFailComicsMarvel = () => ({type: ACTION_FETCH_FAIL_COMICS});\r\nexport const actionSortComicsByField = (payload) => ({type: ACTION_SORT_COMICS, payload});\r\nexport const actionSearchComicsByKey = (payload) => ({type: ACTION_SEARCH_COMICS, payload});\r\nexport const actionViewsComics = (payload) => ({type: ACTION_CHANGE_VIEWS_COMICS, payload});","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps, mapDispatchToProps } from '@comics/module/redux-connect';\r\n\r\ninterface IProps {\r\n    comics: any;\r\n    onSortComics: (sortBy: string) => void;\r\n}\r\n\r\nclass SortBoxComics extends React.Component<any, any> {\r\n    render() {\r\n        const { sortBy } = this.props.comics;\r\n        const onSortComics = this.props.actionSortComics;\r\n        return (\r\n            <select className=\"sort-box\" value={sortBy} onChange={(e) => onSortComics(e.target.value)}>\r\n                <option value=\"id\">Sort by</option>\r\n                <option value=\"title\">Title</option>\r\n            </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBoxComics);\r\n\r\n\r\n","import * as React from 'react';\r\nimport { Link, Switch } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    comic: any\r\n}\r\n\r\nclass ComicItem extends React.Component<IProps, any>{\r\n    render() {\r\n        const {\r\n            id,\r\n            title,\r\n            thumbnail\r\n        } = this.props.comic;\r\n        const imageSrc = `${thumbnail.path}.${thumbnail.extension}`;\r\n        return (\r\n            <div className=\"comic-item\">\r\n                <div className=\"comic-item-image\">\r\n                    <Link to={`/comic/${id}`}>\r\n                        <img src={imageSrc} alt={`image ${title}`} />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"comic-item-text\">\r\n                    <h5>{title}</h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ComicItem;","import { ACTION_REQUEST_FETCH_COMIC, ACTION_FETCHING_COMIC, ACTION_FETCHED_COMIC, ACTION_FETCH_FAIL_COMIC } from \"./constants\";\r\n\r\nexport const actionRequestFetchComicMarvel = (payload) => ({type: ACTION_REQUEST_FETCH_COMIC, payload});\r\nexport const actionFetchingComicMarvel = () => ({type: ACTION_FETCHING_COMIC});\r\nexport const actionFetchedComicMarvel = (payload) => ({type: ACTION_FETCHED_COMIC, payload});\r\nexport const actionFetchFailComicMarvel = () => ({type: ACTION_FETCH_FAIL_COMIC});\r\n","import { combineReducers } from \"redux\";\r\nimport {camelCase} from 'lodash';\r\n\r\nconst requireModule = require.context(\"../modules\", true, /\\.reducer.ts/); //extract [reducerName].reducer.ts files inside redux folder\r\n\r\nconst reducers : any= {};\r\n\r\nrequireModule.keys().forEach( (fileName) => {\r\n  const reducerName = camelCase(fileName.match(/(\\w{1,})(.reducer.ts)/)[1])\r\n  reducers[reducerName] = requireModule(fileName).default;\r\n});\r\n\r\nexport default combineReducers({\r\n    ...reducers\r\n})\r\n\r\n","import { comicsSelector } from \"./reselect\";\r\nimport { actionRequestFetchComicsMarvel, actionSortComicsByField, actionSearchComicsByKey,  actionViewsComics, actionFetchedComicsMarvel} from \"./actions\";\r\n\r\nexport const mapStateToProps = state => ({\r\n    comics:  comicsSelector(state)\r\n})\r\n\r\n\r\nexport const mapDispatchToProps = {\r\n    fetchComicsMarvel: actionRequestFetchComicsMarvel,\r\n    actionSortComics: actionSortComicsByField,\r\n    actionSearchComics: actionSearchComicsByKey,\r\n    actionViewsComics,\r\n    cachePageComicsMarvel: actionFetchedComicsMarvel\r\n}\r\n","var map = {\n\t\"./Comics/features/comic-details/module/comic.reducer.ts\": \"L8tp\",\n\t\"./Comics/module/comics.reducer.ts\": \"2wv3\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"tsKB\";","import * as React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component<any, any> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // You can also log the error to an error reporting service\r\n        console.log(error, info);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return <h1>Something went wrong. Please try again later!</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary; ","import * as React from 'react';\r\nimport \"./module/index.scss\";\r\n\r\n\r\nclass ComicsPageFooter extends React.Component<any, any>{\r\n    render(){\r\n        return (\r\n            <div className=\"home-footer\">\r\n                <p>© 2019 Copyright: marvel.com</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComicsPageFooter;"],"sourceRoot":""}