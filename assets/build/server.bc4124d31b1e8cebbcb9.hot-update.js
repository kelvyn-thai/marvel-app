exports.id = "server";
exports.modules = {

/***/ "./src/server/index.tsx":
/*!******************************!*\
  !*** ./src/server/index.tsx ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst express = __webpack_require__(/*! express */ \"express\");\nconst cors = __webpack_require__(/*! cors */ \"cors\");\nconst morgan = __webpack_require__(/*! morgan */ \"morgan\");\nconst server_1 = __webpack_require__(/*! react-dom/server */ \"react-dom/server\");\nconst react_router_dom_1 = __webpack_require__(/*! react-router-dom */ \"react-router-dom\");\nconst react_redux_1 = __webpack_require__(/*! react-redux */ \"react-redux\");\nconst index_1 = __webpack_require__(/*! @app/index */ \"./src/client/modules/App/index.tsx\");\nconst _doten_config_1 = __webpack_require__(/*! @doten-config */ \"./config.ts\");\nconst store_1 = __webpack_require__(/*! @redux/store */ \"./src/client/redux/store.ts\");\nconst actions_1 = __webpack_require__(/*! @comics/module/actions */ \"./src/client/modules/Comics/module/actions.ts\");\nconst constants_1 = __webpack_require__(/*! @comics/module/constants */ \"./src/client/modules/Comics/module/constants.ts\");\nconst api_1 = __webpack_require__(/*! @comics/module/api */ \"./src/client/modules/Comics/module/api.ts\");\nconst app = express();\nconst port = _doten_config_1.default.PORT;\n// Use morgan to log request in dev mode\napp.use(morgan('dev'));\napp.use(cors());\napp.use(express.static('assets'));\napp.use((err, req, res, next) => {\n    console.log(err);\n    res.status(500).json({\n        error: 'Internal Server Error',\n        details: err\n    });\n});\napp.get('*', (req, res, next) => __awaiter(this, void 0, void 0, function* () {\n    console.log('req.url', req.url);\n    try {\n        store_1.default.dispatch(actions_1.actionFetchingComicsMarvel());\n        const limit = constants_1.LIMIT_PER_PAGE;\n        const page = 1;\n        const params = {\n            limit,\n            offset: (page - 1) * limit\n        };\n        const { data } = yield api_1.default.apiGetComicsMarvel(params);\n        if (data.code === 200) {\n            const { total, results, } = data.data;\n            const payload = {\n                results,\n                page,\n                limit,\n                totalRecords: total,\n                totalPages: Math.ceil(total / params.limit)\n            };\n            store_1.default.dispatch(actions_1.actionFetchedComicsMarvel(payload));\n        }\n        else {\n            store_1.default.dispatch(actions_1.actionFetchFailComicsMarvel());\n        }\n    }\n    catch (error) {\n        store_1.default.dispatch(actions_1.actionFetchFailComicsMarvel());\n    }\n    const html = server_1.renderToString(React.createElement(react_redux_1.Provider, { store: store_1.default },\n        React.createElement(react_router_dom_1.StaticRouter, { location: req.url, context: {} },\n            React.createElement(index_1.default, null))));\n    res.send(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\"> \n        <link rel=\"icon\" href=\"img/marvel-icon.ico\">\n        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n        <link href=\"/build/styles.css\" rel=\"stylesheet\"></head>\n        <title>Marvel App</title>\n    </head>\n    <body>\n        <div id=\"root\">\n            ${html}\n        </div>\n        <script>\n        window.__PRELOADED_STATE__ = ${JSON.stringify(store_1.default.getState()).replace(/</g, '\\\\u003c')}\n        </script>\n        <script type=\"text/javascript\" src=\"/build/runtime.js\"></script>\n        <script type=\"text/javascript\" src=\"/build/vendors.js\"></script>\n        <script type=\"text/javascript\" src=\"/build/bundle.js\"></script>\n    </body>\n    </html>\n    `);\n}));\napp.listen(port, () => console.log('Server start at port ', port));\n\n\n//# sourceURL=webpack:///./src/server/index.tsx?");

/***/ })

};